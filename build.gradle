buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.postgresql:postgresql:42.1.1"
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.2.0"
}

apply plugin: "java"
apply plugin: "idea"

repositories {
    jcenter()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file("src/integration-test/java")
        }
        resources.srcDir file("src/integration-test/resources")
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.22"
    compile "com.sparkjava:spark-core:2.6.0"
    compile "com.zaxxer:HikariCP:2.7.1"

    runtime "org.postgresql:postgresql:42.1.1"
    runtime "org.slf4j:slf4j-simple:1.7.22"

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.8.0"
    testCompile "io.rest-assured:rest-assured:3.0.3"
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes "Main-Class": "org.n3integration.dockerize.Application"
    }
}

flyway {
    url = "jdbc:postgresql://localhost/dockerize"
    user = "postgres"
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}
